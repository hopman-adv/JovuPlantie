/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ChatMessageUpdateManyWithoutPlantsInput } from "./ChatMessageUpdateManyWithoutPlantsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { CommentUpdateManyWithoutPlantsInput } from "./CommentUpdateManyWithoutPlantsInput";
import { LikeUpdateManyWithoutPlantsInput } from "./LikeUpdateManyWithoutPlantsInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class PlantUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ChatMessageUpdateManyWithoutPlantsInput,
  })
  @ValidateNested()
  @Type(() => ChatMessageUpdateManyWithoutPlantsInput)
  @IsOptional()
  @Field(() => ChatMessageUpdateManyWithoutPlantsInput, {
    nullable: true,
  })
  chatMessages?: ChatMessageUpdateManyWithoutPlantsInput;

  @ApiProperty({
    required: false,
    type: () => CommentUpdateManyWithoutPlantsInput,
  })
  @ValidateNested()
  @Type(() => CommentUpdateManyWithoutPlantsInput)
  @IsOptional()
  @Field(() => CommentUpdateManyWithoutPlantsInput, {
    nullable: true,
  })
  comments?: CommentUpdateManyWithoutPlantsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => LikeUpdateManyWithoutPlantsInput,
  })
  @ValidateNested()
  @Type(() => LikeUpdateManyWithoutPlantsInput)
  @IsOptional()
  @Field(() => LikeUpdateManyWithoutPlantsInput, {
    nullable: true,
  })
  likes?: LikeUpdateManyWithoutPlantsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  photo?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { PlantUpdateInput as PlantUpdateInput };
