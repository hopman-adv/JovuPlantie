/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ChatMessageCreateNestedManyWithoutPlantsInput } from "./ChatMessageCreateNestedManyWithoutPlantsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { CommentCreateNestedManyWithoutPlantsInput } from "./CommentCreateNestedManyWithoutPlantsInput";
import { LikeCreateNestedManyWithoutPlantsInput } from "./LikeCreateNestedManyWithoutPlantsInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class PlantCreateInput {
  @ApiProperty({
    required: false,
    type: () => ChatMessageCreateNestedManyWithoutPlantsInput,
  })
  @ValidateNested()
  @Type(() => ChatMessageCreateNestedManyWithoutPlantsInput)
  @IsOptional()
  @Field(() => ChatMessageCreateNestedManyWithoutPlantsInput, {
    nullable: true,
  })
  chatMessages?: ChatMessageCreateNestedManyWithoutPlantsInput;

  @ApiProperty({
    required: false,
    type: () => CommentCreateNestedManyWithoutPlantsInput,
  })
  @ValidateNested()
  @Type(() => CommentCreateNestedManyWithoutPlantsInput)
  @IsOptional()
  @Field(() => CommentCreateNestedManyWithoutPlantsInput, {
    nullable: true,
  })
  comments?: CommentCreateNestedManyWithoutPlantsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => LikeCreateNestedManyWithoutPlantsInput,
  })
  @ValidateNested()
  @Type(() => LikeCreateNestedManyWithoutPlantsInput)
  @IsOptional()
  @Field(() => LikeCreateNestedManyWithoutPlantsInput, {
    nullable: true,
  })
  likes?: LikeCreateNestedManyWithoutPlantsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  photo?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { PlantCreateInput as PlantCreateInput };
