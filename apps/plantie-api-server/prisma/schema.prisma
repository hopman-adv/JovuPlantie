datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Like {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  plant     Plant?   @relation(fields: [plantId], references: [id])
  plantId   String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Plant {
  chatMessages ChatMessage[]
  comments     Comment[]
  createdAt    DateTime      @default(now())
  description  String?
  id           String        @id @default(cuid())
  likes        Like[]
  name         String?
  photo        Json?
  updatedAt    DateTime      @updatedAt
  user         User?         @relation(fields: [userId], references: [id])
  userId       String?
}

model ChatMessage {
  content   String?
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  plant     Plant?    @relation(fields: [plantId], references: [id])
  plantId   String?
  receiver  String?
  sender    String?
  sentAt    DateTime?
  updatedAt DateTime  @updatedAt
}

model Comment {
  content   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  plant     Plant?   @relation(fields: [plantId], references: [id])
  plantId   String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Exchange {
  createdAt      DateTime            @default(now())
  fromUser       String?
  id             String              @id @default(cuid())
  plantOffered   String?
  plantRequested String?
  status         EnumExchangeStatus?
  toUser         String?
  updatedAt      DateTime            @updatedAt
}

model User {
  bio          String?
  comments     Comment[]
  createdAt    DateTime  @default(now())
  email        String?   @unique
  firstName    String?
  id           String    @id @default(cuid())
  lastName     String?
  likes        Like[]
  password     String
  plants       Plant[]
  profilePhoto Json?
  roles        Json
  updatedAt    DateTime  @updatedAt
  username     String    @unique
}

enum EnumExchangeStatus {
  Option1
}
